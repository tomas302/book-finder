{"version":3,"sources":["API.js","components/SearchBar/index.js","components/BookCard/index.js","components/BookList.js","App.js","serviceWorker.js","index.js"],"names":["searchBooks","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","text","queryUrl","books","error","wrap","_context","prev","next","replace","axios","get","then","result","data","items","catch","err","abrupt","stop","_x","apply","this","arguments","SearchBar","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleKeyDown","e","lastQueries","notNull","key","state","pastQuerySelected","handlePastQueryClick","onSearchHandle","setState","focused","preventDefault","getLastQueries","reduce","array","q","index","length","split","map","el","newQuery","i","includes","last10Queries","localStorage","getItem","bind","assertThisInitialized","setWrapperRef","handleClickOutside","document","addEventListener","removeEventListener","node","wrapperRef","event","contains","target","dropdown","_this2","_loop","value","react_default","createElement","DropdownItem","active","onClick","push","style","color","textDecoration","setItem","Dropdown","isOpen","toggle","DropdownToggle","display","DropdownMenu","className","ref","InputGroup","Input","onKeyDown","onChange","onChangeHandle","placeholder","InputGroupAddon","addonType","Button","clearHandle","close","React","Component","BookCard","Card","CardImg","width","src","image","CardBody","CardTitle","title","CardText","author","publisher","window","open","link","BookList","volumeInfo","thumbnail","imageLinks","undefined","authors","infoLink","Col","xs","lg","components_BookCard","Row","marginBottom","App","waitingForApi","searchValue","valueSended","handleSearchBarChange","handleSearchSubmit","handleClearSearch","addNewQuery","searchVal","currentTimeout","clearTimeout","setTimeout","_this3","some","query","splice","unshift","join","pop","queryClicked","contents","Alert","components_BookList","Container","md","size","offset","components_SearchBar","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8bca709.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiKey = \"AIzaSyD_IFTjUwNSb_GWrmlu6PbQfHsM7Oafkdc\";\r\n\r\nconst searchBooks = async (text) => {\r\n    let queryUrl = 'https://www.googleapis.com/books/v1/volumes?q=' + text.replace(\" \", \"+\");\r\n    queryUrl += \"&key=\" + apiKey;\r\n    queryUrl += \"&projection=lite&printType=books&orderBy=relevance\";\r\n    let books;\r\n    let error;\r\n    await axios.get(queryUrl).then(result => {\r\n        books = result.data.items;\r\n    }).catch(err => {\r\n        error = err;\r\n    });\r\n    if (error) throw error;\r\n    if (!books) {\r\n        books = [];\r\n    }\r\n    return books;\r\n};\r\n\r\nexport { searchBooks };","// Detect clicks outside a React component from -> https://stackoverflow.com/questions/32553158/detect-click-outside-react-component\r\n\r\nimport React from 'react';\r\nimport { InputGroup, InputGroupAddon, Button, Input, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            focused: false,\r\n            pastQuerySelected: -1,\r\n            last10Queries: localStorage.getItem(\"last10Queries\").split(\"/\")\r\n        };\r\n\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n        this.handlePastQueryClick = this.handlePastQueryClick.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.getLastQueries = this.getLastQueries.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        let lastQueries, notNull;\r\n        switch(e.key) {\r\n            case('Enter'):\r\n                if (this.state.pastQuerySelected !== -1) {\r\n                    this.handlePastQueryClick(this.state.pastQuerySelected);\r\n                } else {\r\n                    this.props.onSearchHandle();\r\n                    this.setState({ focused: false });\r\n                }\r\n                break;\r\n            case('ArrowDown'):\r\n                e.preventDefault();\r\n                lastQueries = this.getLastQueries(false);\r\n                notNull = lastQueries.reduce((array, q, index) => {\r\n                    if (q !== null)\r\n                        return array += ((array.length !== 0) ? \"/\" : \"\") + index;\r\n                    return array;\r\n                }, \"\");\r\n                notNull = notNull.split(\"/\").map(el => +el);\r\n                if (this.state.pastQuerySelected === -1 || this.state.pastQuerySelected === notNull[notNull.length - 1])\r\n                    this.setState({ pastQuerySelected: notNull[0] });\r\n                else {\r\n                    let newQuery = this.state.pastQuerySelected + 1;\r\n                    for (let i = 0; i < lastQueries.length; i++) {\r\n                        if (newQuery === lastQueries.length) {\r\n                            newQuery = 0;\r\n                        }\r\n                        if (notNull.includes(newQuery)) {\r\n                            break;\r\n                        }\r\n                        newQuery++;\r\n                    }\r\n                    this.setState({ pastQuerySelected: newQuery });\r\n                }\r\n                break;\r\n            case('ArrowUp'):\r\n                e.preventDefault();\r\n                lastQueries = this.getLastQueries(false);\r\n                notNull = lastQueries.reduce((array, q, index) => {\r\n                    if (q !== null)\r\n                        return array += ((array.length !== 0) ? \"/\" : \"\") + index;\r\n                    return array;\r\n                }, \"\");\r\n                notNull = notNull.split(\"/\").map(el => +el);\r\n                if (this.state.pastQuerySelected === -1)\r\n                    this.setState({ pastQuerySelected: notNull[0] });\r\n                else if(this.state.pastQuerySelected === 0)\r\n                    this.setState({ pastQuerySelected: notNull[notNull.length - 1] });\r\n                else {\r\n                    let newQuery = this.state.pastQuerySelected - 1;\r\n                    for (let i = 0; i < lastQueries.length; i++) {\r\n                        if (newQuery === -1) {\r\n                            newQuery = lastQueries.length - 1;\r\n                        }\r\n                        if (notNull.includes(newQuery)) {\r\n                            break;\r\n                        }\r\n                        newQuery--;\r\n                    }\r\n                    this.setState({ pastQuerySelected: newQuery });\r\n                }\r\n                break;\r\n            default:\r\n                if (this.state.pastQuerySelected !== -1) this.setState({ pastQuerySelected: -1 });\r\n                break;\r\n        }\r\n    }\r\n\r\n    handlePastQueryClick(index) {\r\n        this.props.handlePastQueryClick(index);\r\n        this.setState({ focused: false });\r\n    }\r\n\r\n    setWrapperRef(node) {\r\n        this.wrapperRef = node;\r\n    }\r\n\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n            if (this.state.focused) this.setState({ focused: false });\r\n        } else {\r\n            if (!this.state.focused) this.setState({ focused: true });\r\n        }\r\n    }\r\n\r\n    getLastQueries(dropdown) {\r\n        let last10Queries = localStorage.getItem(\"last10Queries\");\r\n        if (last10Queries === \"\") {\r\n            return [];\r\n        }\r\n        last10Queries = last10Queries.split(\"/\");\r\n        for (let i = 0; i < last10Queries.length; i++) {\r\n            if (this.props.value === \"\" || last10Queries[i].includes(this.props.value)) {\r\n                if (i === this.state.pastQuerySelected) {\r\n                    if (dropdown)\r\n                        last10Queries[i] = <DropdownItem active onClick={() => this.handlePastQueryClick(i)} key={i}>{last10Queries[i]}</DropdownItem>;\r\n                } else {\r\n                    if (dropdown)\r\n                        last10Queries[i] = <DropdownItem onClick={() => this.handlePastQueryClick(i)} key={i}>{last10Queries[i]}</DropdownItem>;\r\n                }\r\n            } else {\r\n                last10Queries[i] = null;\r\n            }\r\n        }\r\n        if (dropdown)\r\n            last10Queries.push(<DropdownItem style={{ color: \"blue\", textDecoration: \"underline\" }} onClick={() => { localStorage.setItem(\"last10Queries\", \"\"); this.setState({ focused: false }); } } key={last10Queries.length}>Clear history...</DropdownItem>);\r\n        return last10Queries;\r\n    }\r\n    render() {\r\n        let last10Queries = this.getLastQueries(true);\r\n        let dropdown = (last10Queries.length === 0) ? null : <Dropdown isOpen={this.state.focused} toggle={() => { }} >\r\n                            <DropdownToggle style={{ display: \"none\" }} />\r\n                            <DropdownMenu className=\"search-dropdown\">\r\n                                {last10Queries}\r\n                            </DropdownMenu>\r\n                        </Dropdown>;\r\n        return <div ref={this.setWrapperRef}>\r\n            <InputGroup>\r\n                <Input className=\"search-bar-input\" value={this.props.value} onKeyDown={this.handleKeyDown} onChange={this.props.onChangeHandle} placeholder=\"Search by book title or author...\" />\r\n                <InputGroupAddon addonType=\"append\" className=\"search-bar-cross\">\r\n                    <Button onClick={this.props.clearHandle} close />\r\n                </InputGroupAddon>\r\n                <InputGroupAddon addonType=\"append\">\r\n                    <Button onClick={this.props.onSearchHandle} className=\"search-bar-button\" color=\"success\">Search</Button>\r\n                </InputGroupAddon>\r\n            </InputGroup>\r\n\r\n            {dropdown}\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Button } from 'reactstrap';\r\n\r\nimport './BookCard.css';\r\n\r\nconst BookCard = (props) => {\r\n    return <Card className=\"book-card\">\r\n        <CardImg width={200} src={ props.image } />\r\n        <CardBody>\r\n          <CardTitle><b>{ props.title }</b></CardTitle>\r\n          <CardText>\r\n              By: { props.author }<br />\r\n              Published by: { props.publisher }\r\n          </CardText>\r\n          <Button color=\"success\" className=\"btn-lg\" onClick={() => window.open(props.link, '_blank') }>See this Book</Button>\r\n        </CardBody>\r\n    </Card>;\r\n};\r\n\r\nexport default BookCard;","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport BookCard from './BookCard/';\r\n\r\nconst BookList = (props) => {\r\n    let books = [];\r\n    for (let i = 0; i < props.books.length; i++) {\r\n        let volumeInfo = props.books[i].volumeInfo;\r\n        let thumbnail = (volumeInfo.imageLinks) ? volumeInfo.imageLinks.thumbnail : \"http://www.51allout.co.uk/wp-content/uploads/2012/02/Image-not-found.gif\";\r\n        let title = volumeInfo.title;\r\n        let author = (volumeInfo.authors !== undefined) ? volumeInfo.authors[0] : \"Unknown\";\r\n        let publisher = (volumeInfo.publisher) ? volumeInfo.publisher : \"Unknown\";\r\n        let link = volumeInfo.infoLink;\r\n        books.push(<Col xs=\"12\" lg=\"6\" key={i}>\r\n            <BookCard \r\n                image={thumbnail}\r\n                title={title}\r\n                author={author}\r\n                publisher={publisher}\r\n                link={link}\r\n            />\r\n        </Col>);\r\n    }\r\n    return <Row style={{marginBottom: 50}}>\r\n        {books}\r\n    </Row>\r\n};\r\n\r\nexport default BookList;","import React, { Component } from 'react';\nimport { Container, Row, Col, Alert } from 'reactstrap';\nimport './App.css';\n\nimport { searchBooks } from './API';\n\nimport SearchBar from './components/SearchBar/';\nimport BookList from './components/BookList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      waitingForApi: false,\n      books: [],\n      searchValue: '',\n      valueSended: '',\n      error: ''\n    };\n\n    // with the format: \"mostRecentQuery/query2/olderQuery\"\n    if (localStorage.getItem('last10Queries') === null)\n      localStorage.setItem('last10Queries', \"\");\n    \n    this.handleSearchBarChange = this.handleSearchBarChange.bind(this);\n    this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n    this.handleClearSearch = this.handleClearSearch.bind(this);\n    this.addNewQuery = this.addNewQuery.bind(this);\n    this.handlePastQueryClick = this.handlePastQueryClick.bind(this);\n  }\n\n  handleSearchBarChange(e) {\n    let regex = /[^\\w\\s\\-_,.;:()]+/g;\n    let value = e.target.value.replace(regex, \"\");\n    this.setState({\n      searchValue: value\n    });\n  }\n\n  handleSearchSubmit(searchVal) {\n    let searchValue = (searchVal !== undefined) ? searchVal : this.state.searchValue;\n    // if the same value was already requested from the API, no need to call it back\n    if (searchValue === this.state.valueSended || this.state.waitingForApi) return;\n    if (searchValue === '') {\n      this.setState({\n        valueSended: '',\n        waitingForApi: false\n      });\n      return;\n    }\n    if (this.state.error !== '') {\n      this.setState({ error: '' });\n    }\n    this.setState({\n      valueSended: searchValue,\n      waitingForApi: true\n    });\n    searchBooks(searchValue).then(books => {\n      if (!this.state.waitingForApi) {\n        return;\n      }\n      this.addNewQuery();\n      this.setState({ books: books, waitingForApi: false })\n      if (this.currentTimeout) clearTimeout(this.currentTimeout);\n    }).catch(error => {\n      if (!this.state.waitingForApi) {\n        return;\n      }\n      this.setState({ error: error, waitingForApi: false, valueSended: '' });\n      if (this.currentTimeout) clearTimeout(this.currentTimeout);\n    });\n    if (this.currentTimeout) clearTimeout(this.currentTimeout);\n    this.currentTimeout = setTimeout(() => {\n      if (this.state.waitingForApi) {\n        this.setState({ waitingForApi: false, error: 'Timed out', valueSended: '' });\n      }\n    }, 5000);\n  }\n\n  handleClearSearch() {\n    this.setState({\n      waitingForApi: false,\n      books: [],\n      searchValue: '',\n      valueSended: '',\n      error: ''\n    });\n  }\n\n  // method for handling adding to the last 10 queries list\n  addNewQuery() {\n    let last10Queries = localStorage.getItem('last10Queries').split(\"/\");\n    // we check if the query already exists in the list, if it does, we remove it from its current index and position it in the first place\n    let alreadyExistent = (query, i) => {\n      if (query === this.state.valueSended) {\n        let regex = /[^\\w\\s\\-_,.;:()]+/g;\n        query = query.replace(regex, \"\");\n        last10Queries.splice(i, 1);\n        last10Queries.unshift(query);\n        localStorage.setItem('last10Queries', last10Queries.join(\"/\").replace(/[/]$/, \"\"));\n        return true;\n      }\n      return false;\n    };\n    if (last10Queries.some(alreadyExistent)) return;\n    // if it doesn't, we make space if needed, we added to the beggining and we save it\n    if (last10Queries.length === 10)\n      last10Queries.pop();\n    last10Queries.unshift(this.state.valueSended);\n    localStorage.setItem('last10Queries', last10Queries.join(\"/\").replace(/[/]$/, \"\"));\n  }\n\n  handlePastQueryClick(index) {\n    let regex = /[^\\w\\s\\-_,.;:()]+/g;\n    let queryClicked = localStorage.getItem('last10Queries').split(\"/\")[index].replace(regex, \"\");\n    this.setState({\n      searchValue: queryClicked\n    });\n    this.handleSearchSubmit(queryClicked);\n  }\n\n  render() {\n    let contents;\n    if (this.state.error !== '') {\n      let error = \"There was an error\";\n      if (this.state.error === 'Timed out') error = \"Error: cannot reach the server\";\n      contents = <Col xs=\"12\"><Alert color=\"danger\"><h3>{error}</h3></Alert></Col>;\n    } else if (this.state.waitingForApi) {\n      contents = <Col xs=\"12\"><Alert color=\"secondary\"><h3><i className=\"fas fa-spinner\"></i> Loading...</h3></Alert></Col>;\n    } else if (this.state.books.length === 0) {\n      if (this.state.valueSended !== '') {\n        contents = <Col xs=\"12\"><Alert color=\"warning\"><h3>Nothing found</h3></Alert></Col>;\n      } else {\n        contents = <Col xs=\"12\"><Alert color=\"primary\"><h3>Type something</h3></Alert></Col>;\n      }\n    } else {\n      contents = <BookList books={this.state.books} />;\n    }\n    return (\n      <div className=\"App\">\n        <Container>\n          <Row>\n            <Col>\n              <h1>BOOK FINDER</h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"12\" md={{ size: 10, offset: 1 }}>\n              <SearchBar\n                value={this.state.searchValue}\n                onChangeHandle={this.handleSearchBarChange}\n                onSearchHandle={this.handleSearchSubmit}\n                clearHandle={this.handleClearSearch}\n                handlePastQueryClick={this.handlePastQueryClick}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {contents}\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}